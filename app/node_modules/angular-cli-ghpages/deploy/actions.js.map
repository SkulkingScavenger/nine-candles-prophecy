{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../deploy/actions.ts"],"names":[],"mappings":";;;;;;;;;;AAKA,SAA8B,MAAM,CAClC,MAMC,EACD,OAAuB,EACvB,WAAmB,EACnB,OAAe;;QAEf,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACnB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACpD;YAED,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa;gBACzC,CAAC,CAAC,OAAO,CAAC,aAAa;gBACvB,CAAC,CAAC,YAAY,CAAC;YACjB,MAAM,SAAS,qBACV,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CACxD,CAAC;YAEF,OAAO,CAAC,MAAM,CAAC,IAAI,CACjB,gBACE,OAAO,CAAC,MAAM,CAAC,OACjB,sBAAsB,aAAa,KACjC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,oBAAoB,GAAG,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,EACrE,EAAE,CACH,CAAC;YAEF,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,cAAc,CACxC;gBACE,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO;gBAC/B,aAAa;aACd,EACD,SAA4B,CAC7B,CAAC;YACF,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC;YAEvC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aAClD;SACF;QAED,MAAM,MAAM,CAAC,GAAG,CACd,WAAW,EACX,OAAO,EACN,OAAO,CAAC,MAAuC,CACjD,CAAC;IACJ,CAAC;CAAA;AAtDD,yBAsDC","sourcesContent":["import { BuilderContext } from '@angular-devkit/architect';\nimport { json, logging } from '@angular-devkit/core';\n\nimport { Schema } from './schema';\n\nexport default async function deploy(\n  engine: {\n    run: (\n      dir: string,\n      options: Schema,\n      logger: logging.LoggerApi\n    ) => Promise<void>;\n  },\n  context: BuilderContext,\n  projectRoot: string,\n  options: Schema\n) {\n  if (options.noBuild) {\n    context.logger.info(`ðŸ“¦ Skipping build`);\n  } else {\n    if (!context.target) {\n      throw new Error('Cannot execute the build target');\n    }\n\n    const configuration = options.configuration\n      ? options.configuration\n      : 'production';\n    const overrides = {\n      ...(options.baseHref && { baseHref: options.baseHref })\n    };\n\n    context.logger.info(\n      `ðŸ“¦ Building \"${\n        context.target.project\n      }\". Configuration: \"${configuration}\".${\n        options.baseHref ? ' Your base-href: \"' + options.baseHref + '\"' : ''\n      }`\n    );\n\n    const build = await context.scheduleTarget(\n      {\n        target: 'build',\n        project: context.target.project,\n        configuration\n      },\n      overrides as json.JsonObject\n    );\n    const buildResult = await build.result;\n\n    if (!buildResult.success) {\n      throw new Error('Error while building the app.');\n    }\n  }\n\n  await engine.run(\n    projectRoot,\n    options,\n    (context.logger as unknown) as logging.LoggerApi\n  );\n}\n"]}